include: 
  - template: Security/SAST.gitlab-ci.yml


workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

variables:
  IMAGE_NAME: registry.gitlab.com/stepbysteps/$CI_PROJECT_NAME
  DEV_SERVER_HOST: 129.151.181.166 
  DEV_ENDPOINT: http://129.151.181.166:3000

stages:
  - test
  - build
  - deploy

sast:
  stage: test

build_image:
  stage: build
  tags:
    - local
    - parrot
  before_script:
    - echo "Ty ilay ilaiko $CI_REGISTRY_NAME"
    - export PACKAGE_JSON_VERSION=$(cat package.json | jq -r .version)
    - export VERSION=$PACKAGE_JSON_VERSION.$CI_PIPELINE_IID
    - echo " ity ilay version $PACKAGE_JSON_VERSION.$CI_PIPELINE_IID"
    - echo $VERSION > version-file.txt
    - echo "ito indray ilay anarana feno $IMAGE_NAME:$VERSION"
  script:
    - docker build -t "$IMAGE_NAME:$VERSION" .
  artifacts:
    paths:
      - version-file.tx

push_image:
  stage: build
  needs: 
    - build_image
  tags:
    - local
    - parrot
  before_script:
    - export VERSION = $(cat version-file.txt)
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$VERSION

deploy_to_server:
  stage: deploy
  needs: 
    - push_image
  tags:
    - local
    - parrot
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - export VERSION=$(cat version-file.txt)
  script:
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yml ubuntu@$DEV_SERVER_HOST:/home/ubuntu
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$DEV_SERVER_HOST "
        docker login -u $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD $CI_REGISTRY &&

        export DC_IMAGE_NAME = $IMAGE_NAME &&
        export DC_IMAGE_TAG = $VERSION &&

        docker-compose down &&
        docker-compose up -d"
  environment:
    name: development
    url: $DEV_ENDPOIN